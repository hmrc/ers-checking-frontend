->          /govuk-frontend                             govuk.Routes
->          /hmrc-frontend                              hmrcfrontend.Routes

GET 		/								            controllers.CheckingServiceController.startPage()

GET  		/assets/*file					            @controllers.Assets.versioned(path="/public", file: Asset)

GET  		/start							            controllers.CheckingServiceController.startPage()

GET  		/choose-file-type				            controllers.CheckingServiceController.checkFileTypePage()
POST 		/choose-file-type				            controllers.CheckingServiceController.checkFileTypeSelected()

GET         /select-csv-files                           controllers.CheckCsvFilesController.selectCsvFilesPage()
POST        /select-csv-files                           controllers.CheckCsvFilesController.checkCsvFilesPageSelected()

GET  		/choose-and-check-csv-files					controllers.CheckingServiceController.checkCSVFilePage()
GET  		/choose-and-check-ods-file					controllers.CheckingServiceController.checkODSFilePage()

GET 		/download-validate-csv-files				controllers.UploadController.uploadCSVFile(fileId: String)
GET 		/download-validate-ods-file					controllers.UploadController.uploadODSFile(fileId: String)

GET			/upscan/success/csv                         controllers.UpscanController.successCSV(uploadId: UploadId, scheme: String)
GET			/upscan/success/ods                         controllers.UpscanController.successODS(scheme: String)
GET			/upscan/failure                          	controllers.UpscanController.failure()

GET			/choose-scheme-or-arrangement-type			controllers.CheckingServiceController.schemeTypePage()
POST  		/choose-scheme-or-arrangement-type			controllers.CheckingServiceController.schemeTypeSelected()

GET			/confirmation			                    controllers.CheckingServiceController.checkingSuccessPage()
GET			/format-errors				                controllers.CheckingServiceController.formatErrorsPage()

GET			/error-report			    	            controllers.HtmlReportController.htmlErrorReportPage(isCsv: Boolean)

GET			/not-authorised                             controllers.AuthorisationController.notAuthorised()

GET			/language/:lang                             @controllers.LanguageSwitchController.switchToLanguage(lang: String)
