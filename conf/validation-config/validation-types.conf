# Copyright 2021 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

validation-types {
  date: {
    rule: "verifyDate(data)"
    errorMsg: "ers.upload.error.date"
  }
  first-name: {
    rule: """verifyFormat("[A-Za-z0-9 '-]{1,35}",data)"""
    errorMsg: "ers.upload.error.first-name"
  }
  second-name: {
    rule: """verifyFormat("[A-Za-z0-9 '-]{1,35}",data)"""
    errorMsg: "ers.upload.error.second-name"
  }
  last-name: {
    rule: """verifyFormat("[A-Za-z0-9 '-]{1,35}",data)"""
    errorMsg: "ers.upload.error.last-name"
  }
  nino: {
    rule: """verifyFormat("[A-Z]{2}[0-9]{6}[A-Z]{0,1}",data)"""
    errorMsg: "ers.upload.error.nino"
  }
  paye: {
    rule: """verifyFormat("[a-zA-Z0-9/]{1,14}",data)"""
    errorMsg: "ers.upload.error.paye"
  }
  hmrcRef: {
    rule: """verifyFormat("([0-9a-zA-Z]{1,10})",data)"""
    errorMsg: "ers.upload.error.hmrcRef"
  }
  srn: {
    rule: """verifyFormat("[0-9]{1,10}",data)"""
    errorMsg: "ers.upload.error.srn"
  }
  digitsUpTo2: {
    rule: """verifyFormat("([0-9]{1,11}\\.[0-9]{2}|[0-9]{1,11})",data)"""
    errorMsg: "ers.upload.error.digitsUpTo2"
  }
  digits2: {
    rule: """verifyFormat("([0-9]{1,11}\\.[0-9]{2})",data)"""
    errorMsg: "ers.upload.error.digits2"
  }
  digitsUpTo4: {
    rule: """verifyFormat("([0-9]{1,13}\\.[0-9]{1,4}|[0-9]{1,13})",data)"""
    errorMsg: "ers.upload.error.digitsUpTo4"
  }
  digits4: {
    rule: """verifyFormat("([0-9]{1,13}\\.[0-9]{4})",data)"""
    errorMsg: "ers.upload.error.digits4"
  }
  int6: {
    rule: """verifyFormat("([0-9]{1,6})",data)"""
    errorMsg: "ers.upload.error.int6"
  }
  yes-no {
    rule: """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
    errorMsg: "ers.upload.error.yes-no"
  }
  enum1-3 {
    rule: """verifyFormat("([1-3]{1})",data)"""
    errorMsg: "ers.upload.error.enum1-3"
  }
  enum1-4 {
    rule: """verifyFormat("([1-4]{1})",data)"""
    errorMsg: "ers.upload.error.enum1-4"
  }
  enum1-8 {
    rule: """verifyFormat("[1-8]{1}",data)"""
    errorMsg: "ers.upload.error.enum1-8"
  }
  enum1-9 {
    rule: """verifyFormat("[1-9]{1}",data)"""
    errorMsg: "ers.upload.error.enum1-9"
  }
  enum-all-some {
    rule: """verifyFormat("(?i)(\\ball\\b)|(\\bsome\\b)",data)"""
    errorMsg: "ers.upload.error.enum-all-some"
  }
  ratio {
    rule: """verifyFormat("([0-9]+\\:[0-9]+|[0-9]+\\/[0-9]+)",data)"""
    errorMsg: "ers.upload.error.ratio"
  }
  company-name: {
    rule: """verifyFormat("[A-Za-z0-9 '-]{1,120}",data)"""
    errorMsg: "ers.upload.error.company-name"
  }
  address: {
    line1: {
      rule: """verifyFormat("[A-Za-z0-9 ',/&amp;-]{1,27}",data)"""
      errorMsg: "ers.upload.error.address-line1"
    }
    line2:{
      rule: """verifyFormat("[A-Za-z0-9 ',/&amp;-]{1,27}",data)"""
      errorMsg: "ers.upload.error.address-line2"
    }
    line3:{
      rule: """verifyFormat("[A-Za-z0-9 ',/&amp;-]{1,27}",data)"""
      errorMsg: "ers.upload.error.address-line3"
    }
    line4:{
      rule: """verifyFormat("[A-Za-z0-9 ',/&amp;-]{1,18}",data)"""
      errorMsg: "ers.upload.error.address-line4"
    }
    country: {
      rule: """verifyFormat("[A-Za-z0-9 ',/&amp;-]{1,18}",data)"""
      errorMsg: "ers.upload.error.address-country"
    }
    postcode: {
      rule: """verifyFormat("[A-Z0-9 ]{6,8}",data)"""
      errorMsg: "ers.upload.error.address-postcode"
      errorMsgMand: "ers.upload.error.address-postcode-mand"
    }
  }
  crn: {
    rule: """verifyFormat("[A-Za-z0-9]{1,10}",data)"""
    errorMsg: "ers.upload.error.crn"
  }
  ctr: {
    rule: """verifyFormat("[0-9]{10}",data)"""
    errorMsg: "ers.upload.error.ctr"
  }
  nonEmpty: {
    rule: """notEmpty(data)"""
  }
}
