# Copyright 2016 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ers-csop-exercised-validation{
  fieldInfo: [
    {
      column = "A"
      cellName = "1. Date of event (yyyy-mm-dd)"
      mandatory = true
      error: [
        {
          id = "error.1"
          errorMsg = "Enter a date that matches the yyyy-mm-dd pattern."
          validationID = "1"
          expr = "verifyDate(data)"
          errorId = "001"
        }
      ]
    }
    {
      column = "B"
      cellName = "2. Employee first name"
      mandatory = true
      error: [
        {
          id = "error.2"
          errorMsg = "Enter a first name (must be less than 36 characters)."
          validationID = "2"
          expr = """verifyFormat("(?!.*  )[a-zA-Z-' ]{1,35}",data)"""
          errorId = "002"
        }

      ]
    }
    {
      column = "C"
      cellName = "3. Employee second name (if applicable)"
      mandatory = false
      error: [
        {
          id = "error.3"
          errorMsg = "Must be less than 36 characters."
          validationID = "3"
          expr = """verifyFormat("(?!.*  )[a-zA-Z-' ]{1,35}",data)"""
          errorId = "003"
        }

      ]
    }
    {
      column = "D"
      cellName = "4. Employee last name"
      mandatory = true
      error: [
        {
          id = "error.4"
          errorMsg = "Enter a last name (must be less than 36 characters)."
          validationID = "4"
          expr = """verifyFormat("(?!.*  )[a-zA-Z-' ]{1,35}",data)"""
          errorId = "004"
        }

      ]
    }
    {
      column = "E"
      cellName = "5. National Insurance number (if applicable)"
      mandatory = false
      error: [
        {
          id = "error.5"
          errorMsg = "The National Insurance number must be 2 letters followed by 6 number digits, with an optional final letter."
          validationID = "5"
          expr = """verifyFormat("[[A-Z]&&[^DFIQUV]][[A-Z]&&[^DFIQUVO]] ?\\d{2} ?\\d{2} ?\\d{2} ?[A-Z]{1}",data)"""
          errorId = "005"
        }

      ]
    }
    {
      column = "F"
      cellName = "6. PAYE reference of employing company"
      mandatory = false
      error: [
        {
          id = "error.6"
          errorMsg = "PAYE reference must be a 3 digit number followed by a forward slash and up to 10 more characters."
          validationID = "6"
          expr = """verifyFormat("[a-zA-Z0-9/]{1,14}",data)"""
          errorId = "006"
        }

      ]
    }
    {
      column = "G"
      cellName = "7. Date of grant (yyyy-mm-dd)"
      mandatory = true
      error: [
        {
          id = "error.7"
          errorMsg = "Enter a date that matches the yyyy-mm-dd pattern."
          validationID = "7"
          expr = """verifyDate(data)"""
          errorId = "007"
        }

      ]
    }
    {
      column = "H"
      cellName = "8. Total number of shares employee entitled to on exercise of the option before any cashless exercise or other adjustment e.g. 100.00"
      mandatory = false
      error: [
        {
          id = "error.8"
          errorMsg = "Must be a number with 2 digits after the decimal point (and no more than 11 digits in front of it)."
          validationID = "8"
          expr = """verifyFormat("([0-9]+.[0-9]{2})",data)"""
          errorId = "008"
        }
        {
          id = "error.9"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "9"
          expr = """verifyFormat("([0-9]*|0|[0-9]*.[0-9]+)",data)"""
          errorId = "009"
        }
        {
          id = "error.10"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "10"
          expr = """verifyFormat("([0-9]{0,11}|[0-9]{0,11}.[0-9]+)",data)"""
          errorId = "010"
        }
      ]
    }
    {
      column = "I"
      cellName = "9. Are these shares part of the largest class of shares in that company? (yes/no)"
      mandatory = true
      error: [
        {
          id = "error.11"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "11"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "011"
        }
      ]
    }
    {
      column = "J"
      cellName = "10. Are the shares subject to the option listed on a recognised stock exchange? (yes/no)"
      mandatory = true
      error: [
        {
          id = "error.12"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "12"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "012"
        }
      ]
    }
    {
      column = "K"
      cellName = "11. Actual market value (AMV) of a share on the date of exercise £ e.g. 10.1234"
      mandatory = false
      error: [
        {
          id = "error.13"
          errorMsg = "Must be a number with 4 digits after the decimal point (and no more than 13 digits in front of it)."
          validationID = "13"
          expr = """verifyFormat("([0-9]+\\.[0-9]{4})",data)"""
          errorId = "013"
        }
        {
          id = "error.14"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "14"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "014"
        }
        {
          id = "error.15"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "15"
          expr = """verifyFormat("([0-9]{0,13}|[0-9]{0,13}\\.[0-9]+)",data)"""
          errorId = "015"
        }
      ]
    }
    {
      column = "L"
      cellName = "12. Exercise price per share £ e.g. 10.1234"
      mandatory = false
      error: [
        {
          id = "error.16"
          errorMsg = "Must be a number with 4 digits after the decimal point (and no more than 13 digits in front of it)."
          validationID = "16"
          expr = """verifyFormat("([0-9]+\\.[0-9]{4})",data)"""
          errorId = "016"
        }
        {
          id = "error.17"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "17"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "017"
        }
        {
          id = "error.18"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "18"
          expr = """verifyFormat("([0-9]{0,13}|[0-9]{0,13}\\.[0-9]+)",data)"""
          errorId = "018"
        }
      ]
    }
    {
      column = "M"
      cellName = "13. Unrestricted market value (UMV) of a share on the date of exercise £ e.g. 10.1234"
      mandatory = false
      error: [
        {
          id = "error.19"
          errorMsg = "Must be a number with 4 digits after the decimal point (and no more than 13 digits in front of it)."
          validationID = "19"
          expr = """verifyFormat("([0-9]+\\.[0-9]{4})",data)"""
          errorId = "019"
        }
        {
          id = "error.20"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "20"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "020"
        }
        {
          id = "error.21"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "21"
          expr = """verifyFormat("([0-9]{0,13}|[0-9]{0,13}\\.[0-9]+)",data)"""
          errorId = "021"
        }
      ]
    }
    {
      column = "N"
      cellName = "14. If the answer to question 10 is no, was the market value agreed with HMRC? (yes/no)"
      mandatory = false
      error: [
        {
          id = "error.22"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "22"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "022"
        }
      ]
    }
    {
      column = "O"
      cellName = "15. If yes enter the HMRC reference given"
      mandatory = false
      error: [
        {
          id = "error.23"
          errorMsg = "Enter the HMRC reference (must be less than 11 characters)."
          validationID = "23"
          expr = """verifyFormat("([0-9a-zA-Z]{1,10})",data)"""
          errorId = "023"
        }
      ]
    }
    {
      column = "P"
      cellName = "16. Does the exercise qualify for tax relief? (yes/no)"
      mandatory = true
      error: [
        {
          id = "error.24"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "24"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "024"
        }
      ]
    }
    {
      column = "Q"
      cellName = "17. Was PAYE operated? (yes/no)"
      mandatory = true
      error: [
        {
          id = "error.25"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "25"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "025"
        }
      ]
    }
    {
      column = "R"
      cellName = "18. If yes, deductible amount £ e.g. 10.1234"
      mandatory = false
      error: [
        {
          id = "error.26"
          errorMsg = "Must be a number with 4 digits after the decimal point (and no more than 13 digits in front of it)."
          validationID = "26"
          expr = """verifyFormat("([0-9]+\\.[0-9]{4})",data)"""
          errorId = "026"
        }
        {
          id = "error.27"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "27"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "027"
        }
        {
          id = "error.28"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "28"
          expr = """verifyFormat("([0-9]{0,13}|[0-9]{0,13}\\.[0-9]+)",data)"""
          errorId = "028"
        }
      ]
    }
    {
      column = "S"
      cellName = "19. Has a National Insurance Contributions election or agreement been operated? (yes/no)"
      mandatory = true
      error: [
        {
          id = "error.29"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "29"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "029"
        }

      ]
    }
    {
      column = "T"
      cellName = "20. Were all shares resulting from the exercise sold? (yes/no). Answer yes if they were either sold on the same day as the exercise in connection with the exercise or sale instructions were given for all shares to be sold on exercise"
      mandatory = true
      error: [
        {
          id = "error.30"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "30"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "030"
        }

      ]
    }
   ]
  group-rules:[
    {
      id="mandatoryO"
      errorId="O01"
      columns:["O", "N"]
      expr="mandatoryBoolean(\"yes\",dataN, dataO)"
      columnErrors: {
        "O":  {errorMsgTemplate = "'@{cellNameO}' must be answered if '@{cellNameN}' was answered with YES."}
      }
    }
    {
      id="mandatoryR"
      errorId="R01"
      columns:["R", "Q"]
      expr="mandatoryBoolean(\"yes\",dataQ, dataR)"
      columnErrors: {
        "R":  {errorMsgTemplate = "'@{cellNameR}' must be answered if '@{cellNameQ}' was answered with YES."}
      }
    }
    ]
  rules: [{
    id="MANDATORY"
    errorId="100"
    errorMsgTemplate = "'@{cellName}' must have an entry."
    expr="notEmpty(data)"
  }
    {
      id="length"
      errorId="017"
      errorMsgTemplate = "'@{cellName}' must be between @{min} and @{max} characters long."
      exprTemplate="data.length() >= @{min} && data.length() <= @{max}"
    }
  ]
}
