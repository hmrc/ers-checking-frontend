# Copyright 2016 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ers-sip-awards-validation-config{
  fieldInfo: [
    {
      column = "A"
      cellName = "1. Date of event(yyyy-mm-dd)"
      mandatory = true
      error: [
        {
          id = "error.1"
          errorMsg = "Enter a date that matches the yyyy-mm-dd pattern."
          validationID = "1"
          expr = "verifyDate(data)"
          errorId = "001"
        }
      ]
    }
    {
      column = "B"
      cellName = "2. Number of employees who acquired or were awarded shares"
      mandatory = false
      error: [
        {
          id = "error.2"
          errorMsg = "Must be a whole number and be less than 1,000,000."
          validationID = "2"
          expr = """verifyFormat("([0-9]{0,6}|0|[0-9]{0,6}\\.[0-9]+)",data)"""
          errorId = "002"
        }
        {
          id = "error.3"
          errorMsg = "This entry must be a whole number."
          validationID = "3"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "003"
        }
      ]
    }
    {
      column = "C"
      cellName = "3. Type of shares awarded Enter a number from 1 to 4 depending on the type of share awarded. Follow the link at cell B10 for a list of the types of share which can be awarded"
      mandatory = true
      error: [
        {
          id = "error.4"
          errorMsg = "Enter '1', '2', '3' or '4'."
          validationID = "4"
          expr = """verifyFormat("([1-4]{1})",data)"""
          errorId = "004"
        }
        {
          id = "error.5"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "5"
          expr = """verifyFormat("([0-9]{1})",data)"""
          errorId = "005"
        }
        {
          id = "error.6"
          errorMsg = "This entry must be a whole number."
          validationID = "6"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "006"
        }
        {
          id = "error.7"
          errorMsg = "This entry must be either a positive number or a zero."
          validationID = "7"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "007"
        }

      ]
    }
    {
      column = "D"
      cellName = "4. If free shares, are performance conditions attached to their award? (yes/no)"
      mandatory = false
      error: [
        {
          id = "error.8"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "8"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "008"
        }

      ]
    }
    {
      column = "E"
      cellName = "5. If matching shares, what is the ratio of shares to partnership shares? Enter ratio for example 2:1; 2/1"
      mandatory = false
      error: [
        {
          id = "error.9"
          errorMsg = "Enter the ratio of the matching shares (numbers must be separated by a ':' or '/', for example, 2:1 or 2/1)."
          validationID = "9"
          expr = """verifyFormat("([0-9]+\\:[0-9]+|[0-9]+\\/[0-9]+)",data)"""
          errorId = "009"
        }

      ]
    }
    {
      column = "F"
      cellName = "6. Unrestricted market value (UMV) per share on acquisition or award £ e.g. 10.1234"
      mandatory = false
      error: [
        {
          id = "error.10"
          errorMsg = "Must be a number with 4 digits after the decimal point (and no more than 13 digits in front of it)."
          validationID = "10"
          expr = """verifyFormat("([0-9]+\\.[0-9]{4})",data)"""
          errorId = "010"
        }
        {
          id = "error.11"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "11"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "011"
        }
        {
          id = "error.12"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "12"
          expr = """verifyFormat("([0-9]{0,13}|[0-9]{0,13}\\.[0-9]+)",data)"""
          errorId = "012"
        }

      ]
    }
    {
      column = "G"
      cellName = "7. Total number of shares acquired or awarded e.g. 100.00"
      mandatory = false
      error: [
        {
          id = "error.13"
          errorMsg = "Must be a number with 2 digits after the decimal point (and no more than 11 digits in front of it)."
          validationID = "13"
          expr = """verifyFormat("([0-9]+\\.[0-9]{2})",data)"""
          errorId = "013"
        }
        {
          id = "error.14"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "14"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "014"
        }
        {
          id = "error.15"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "15"
          expr = """verifyFormat("([0-9]{0,11}|[0-9]{0,11}\\.[0-9]+)",data)"""
          errorId = "015"
        }

      ]
    }
    {
      column = "H"
      cellName = "8. Total value of shares acquired or awarded £ e.g. 10.1234"
      mandatory = false
      error: [
        {
          id = "error.16"
          errorMsg = "Must be a number with 4 digits after the decimal point (and no more than 13 digits in front of it)."
          validationID = "16"
          expr = """verifyFormat("([0-9]+\\.[0-9]{4})",data)"""
          errorId = "016"
        }
        {
          id = "error.17"
          errorMsg = "This entry must be a number made up of digits."
          validationID = "17"
          expr = """verifyFormat("([0-9]*|0|[0-9]*\\.[0-9]+)",data)"""
          errorId = "017"
        }
        {
          id = "error.18"
          errorMsg = "This entry is larger than the maximum number value allowed."
          validationID = "18"
          expr = """verifyFormat("([0-9]{0,13}|[0-9]{0,13}\\.[0-9]+)",data)"""
          errorId = "018"
        }

      ]
    }
    {
      column = "I"
      cellName = "9. Total number of employees whose award of free shares during the year exceeded the limit of £3,600"
      mandatory = false
      error: [
        {
          id = "error.19"
          errorMsg = "Must be a whole number and be less than 1,000,000."
          validationID = "19"
          expr = """verifyFormat("([0-9]{0,6}|0|[0-9]{0,6}\\.[0-9]+)",data)"""
          errorId = "019"
        }
        {
          id = "error.20"
          errorMsg = "This entry must be a whole number."
          validationID = "20"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "020"
        }

      ]
    }
    {
      column = "J"
      cellName = "10. Total number of employees whose award of free shares during the year was at or below the limit of £3,600"
      mandatory = false
      error: [
        {
          id = "error.21"
          errorMsg = "Must be a whole number and be less than 1,000,000."
          validationID = "21"
          expr = """verifyFormat("([0-9]{0,6}|0|[0-9]{0,6}\\.[0-9]+)",data)"""
          errorId = "021"
        }
        {
          id = "error.22"
          errorMsg = "This entry must be a whole number."
          validationID = "22"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "022"
        }

      ]
    }
    {
      column = "K"
      cellName = "11. Total number of employees whose award of partnership shares during the year exceeded the limit of £1,800"
      mandatory = false
      error: [
        {
          id = "error.23"
          errorMsg = "Must be a whole number and be less than 1,000,000."
          validationID = "23"
          expr = """verifyFormat("([0-9]{0,6}|0|[0-9]{0,6}\\.[0-9]+)",data)"""
          errorId = "023"
        }
        {
          id = "error.24"
          errorMsg = "This entry must be a whole number."
          validationID = "24"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "024"
        }

      ]
    }
    {
      column = "L"
      cellName = "12. Total number of employees whose award of partnership shares during the year was at or below the limit of £1,800"
      mandatory = false
      error: [
        {
          id = "error.25"
          errorMsg = "Must be a whole number and be less than 1,000,000."
          validationID = "25"
          expr = """verifyFormat("([0-9]{0,6}|0|[0-9]{0,6}\\.[0-9]+)",data)"""
          errorId = "025"
        }
        {
          id = "error.26"
          errorMsg = "This entry must be a whole number."
          validationID = "26"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "026"
        }

      ]
    }
    {
      column = "M"
      cellName = "13. Total number of employees whose award of matching shares during the year exceeded the limit of £3,600"
      mandatory = false
      error: [
        {
          id = "error.27"
          errorMsg = "Must be a whole number and be less than 1,000,000."
          validationID = "27"
          expr = """verifyFormat("([0-9]{0,6}|0|[0-9]{0,6}\\.[0-9]+)",data)"""
          errorId = "027"
        }
        {
          id = "error.28"
          errorMsg = "This entry must be a whole number."
          validationID = "28"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "028"
        }

      ]
    }
    {
      column = "N"
      cellName = "14. Total number of employees whose award of matching shares during the year was at or below the limit of £3,600"
      mandatory = false
      error: [
        {
          id = "error.29"
          errorMsg = "Must be a whole number and be less than 1,000,000."
          validationID = "29"
          expr = """verifyFormat("([0-9]{0,6}|0|[0-9]{0,6}\\.[0-9]+)",data)"""
          errorId = "029"
        }
        {
          id = "error.30"
          errorMsg = "This entry must be a whole number."
          validationID = "30"
          expr = """verifyFormat("(\\-[0-9]+|[0-9]+)",data)"""
          errorId = "030"
        }

      ]
    }
    {
      column = "O"
      cellName = "15. Are the shares listed on a recognised stock exchange? (yes/no)"
      mandatory = true
      error: [
        {
          id = "error.31"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "31"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "031"
        }

      ]
    }
    {
      column = "P"
      cellName = "16. If no, was the market value agreed with HMRC? (yes/no)"
      mandatory = false
      error: [
        {
          id = "error.32"
          errorMsg = "Enter 'yes' or 'no'."
          validationID = "32"
          expr = """verifyFormat("(?i)(\\byes\\b)|(\\bno\\b)",data)"""
          errorId = "032"
        }

      ]
    }
    {
      column = "Q"
      cellName = "17. If yes, enter the HMRC reference given"
      mandatory = false
      error: [
        {
          id = "error.33"
          errorMsg = "Enter the HMRC reference (must be less than 11 characters)."
          validationID = "33"
          expr = """verifyFormat("([0-9a-zA-Z]{1,10})",data)"""
          errorId = "033"
        }

      ]
    }
  ]
  group-rules:[
    {
      id="mandatoryD"
      errorId="D01"
      columns:["D", "C"]
      expr="mandatoryBoolean(\"2\",dataC, dataD)"
      columnErrors: {
        "D":  {errorMsgTemplate = "'@{cellNameD}' must be answered if '@{cellNameC}' was answered with 2."}
      }
    }
    {
      id="mandatoryE"
      errorId="E01"
      columns:["E", "C"]
      expr="mandatoryBoolean(\"1\",dataC, dataE)"
      columnErrors: {
        "E":  {errorMsgTemplate = "'@{cellNameE}' must be answered if '@{cellNameC}' was answered with 1."}
      }
    }
    {
      id="mandatoryP"
      errorId="P01"
      columns:["P", "O"]
      expr="mandatoryBoolean(\"NO\",dataO, dataP)"
      columnErrors: {
        "P":  {errorMsgTemplate = "'@{cellNameP}' must be answered if '@{cellNameO}' was answered with NO."}
      }
    }
    {
      id="mandatoryQ"
      errorId="Q01"
      columns:["Q", "P"]
      expr="mandatoryBoolean(\"YES\",dataP, dataQ)"
      columnErrors: {
        "Q":  {errorMsgTemplate = "'@{cellNameQ}' must be answered if '@{cellNameP}' was answered with YES."}
      }
    }
  ]
  rules: [
    {
      id="MANDATORY"
      errorId="100"
      errorMsgTemplate = "'@{cellName}' must have an entry."
      expr="notEmpty(data)"
    }
    {
      id="length"
      errorId="101"
      errorMsgTemplate = "'@{cellName}' must be between @{min} and @{max} characters long."
      exprTemplate="data.length() >= @{min} && data.length() <= @{max}"
    }
  ]
}
